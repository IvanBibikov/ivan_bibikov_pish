# 3.Разворот блоков в списке
# Дан список чисел и размер блока. Нужно развернуть элементы в каждом блоке по отдельности. 
# Если последний блок меньше по размеру, его нужно оставить без изменений.
# Вход array = [1, 2, 3, 4, 5, 6, 7]
# Выход: [3, 2, 1, 6, 5, 4, 7]
array = [1, 2, 3, 4, 5, 6, 7] # исходный список
block_size = 3 # заданный размер блока
def reverse_unit (list, unit_size): # функция деления списка на блоки, разворота элементов в каждом блоке, составления преобразованного списка
    start = 0
    stop = 0
    i = 1
    rev_unit_list = []
    num_of_elem = len (list) # определяем длину исходного списка
    num_of_unit = num_of_elem//unit_size # определяем кол-во блоков заданной длины в списке
    for i in range (num_of_unit): # в диапазонее от i до кол-ва блоков в списке
        stop = stop + unit_size # определяем конечный индекс среза
        part_list = list [start:stop:] # с помощью среза выбираем из заданного списка блок нужной длины
        part_list.reverse() # инвертируем элементы в выбранном блоке
        start = start + unit_size # определяем начальный индекс среза
        rev_unit_list = rev_unit_list + part_list # собираем блоки в новый список
    rev_list = rev_unit_list + list [(unit_size*num_of_unit)::] # к списку из блоков заданной длины добавляем фрагмент исходного списка, который короче заданной длины
    return rev_list # возвращаем преобразованный список
print ("Исходный список", array)
print ("Размер блока в списке", block_size)
print ("Список с элементами в обратном порядке в каждом блоке", reverse_unit (array, block_size))