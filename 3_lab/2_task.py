# 2. Перестановка вложенных списков
# Дан вложенный список, состоящий из нескольких списков одинаковой длины. 
# Нужно выполнить циклический сдвиг элементов внутри каждого из вложенных списков.
# Вход: matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
# Выход:[[3, 1, 2], [6, 4, 5], [9, 7, 8]]
matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] # исходный список
(row1, row2, row3) = matrix # преобразуем двумерный список в 3 одномерных списка
print ("Исходный список", matrix ) # выводим исходный список
shift = 1 # заданный сдвиг списка
def shift_list (list, step): # функция циклического сдвига списка list на заданное кол-во позиций step
    if step < 0: # если задан сдвиг на отрицательное кол-во позиций
        step = abs (step) # берём значение сдвига по модулю
        for i in range (step): # в диапазоне от i до заданного значения сдвига
            list.append (list.pop (0)) # сдвигаем список налево (извлекаем первый элемент списка и добавлем его в конец) 
    else: # если задан сдвиг на положительное кол-во позиций или 0
        for i in range (step): # в диапазоне от i до заданного значения сдвига
            list.insert (0, list.pop()) # сдвигаем список направо (извлекаем элемент с конца списка и вставляем в начало списка)
shift_list (row1, shift) # возвращаем результат функции сдвига списка. В качестве аргументов список row1 и заданный сдвиг
shift_list (row2, shift) # возвращаем результат функции сдвига списка. В качестве аргументов список row2 и заданный сдвиг
shift_list (row3, shift) # возвращаем результат функции сдвига списка. В качестве аргументов список row3 и заданный сдвиг
print ("Сдвиг", shift) # выводим заданный сдвиг списка
shift_matrix = [row1, row2, row3] # преобразуем 3 списка со сдвигом в один двумерный
print ( "Список со сдвигом", shift_matrix) # выводим преобразованный двумерный список